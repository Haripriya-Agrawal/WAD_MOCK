Let's build a **Basic Calculator** in **Angular** using **two-way data binding** with `ngModel`.  

### **Features**:  
âœ… **Addition, Subtraction, Multiplication, Division**  
âœ… **Two-way data binding (`ngModel`)**  
âœ… **Simple UI with real-time calculation**  

---

## **Step 1: Install Angular CLI & Create Project**
### **1.1 Install Angular CLI (if not already installed)**
```sh
npm install -g @angular/cli
```
### **1.2 Create a new Angular project**
```sh
ng new calculator-app
cd calculator-app
```
### **1.3 Start the Angular development server**
```sh
ng serve
```
Now open **http://localhost:4200/** in your browser.

---

## **Step 2: Create the Calculator Component**
Generate a new component for the calculator:
```sh
ng generate component calculator
```
or  
```sh
ng g c calculator
```
This creates:  
```
src/app/calculator/
  â”œâ”€â”€ calculator.component.ts
  â”œâ”€â”€ calculator.component.html
  â”œâ”€â”€ calculator.component.css
  â””â”€â”€ calculator.component.spec.ts
```

---

## **Step 3: Import `FormsModule` in `app.module.ts`**  
Since we're using **two-way data binding (`ngModel`)**, open `src/app/app.module.ts` and **import `FormsModule`**:

```typescript
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { AppComponent } from './app.component';
import { CalculatorComponent } from './calculator/calculator.component';
import { FormsModule } from '@angular/forms';  // Import FormsModule

@NgModule({
  declarations: [
    AppComponent,
    CalculatorComponent
  ],
  imports: [
    BrowserModule,
    FormsModule  // Add FormsModule here
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
```

---

## **Step 4: Implement Calculator Logic in `calculator.component.ts`**
Replace the contents of `calculator.component.ts` with:

```typescript
import { Component } from '@angular/core';

@Component({
  selector: 'app-calculator',
  templateUrl: './calculator.component.html',
  styleUrls: ['./calculator.component.css']
})
export class CalculatorComponent {
  num1: number = 0;
  num2: number = 0;
  result: number = 0;
  operator: string = '+';

  calculate() {
    switch (this.operator) {
      case '+':
        this.result = this.num1 + this.num2;
        break;
      case '-':
        this.result = this.num1 - this.num2;
        break;
      case '*':
        this.result = this.num1 * this.num2;
        break;
      case '/':
        this.result = this.num2 !== 0 ? this.num1 / this.num2 : NaN;
        break;
      default:
        this.result = 0;
    }
  }
}
```

---

## **Step 5: Create the Calculator UI in `calculator.component.html`**
Replace the contents of `calculator.component.html` with:

```html
<div class="container">
  <h2>Angular Calculator</h2>

  <div class="input-group">
    <input type="number" [(ngModel)]="num1" placeholder="Enter first number" />
    <select [(ngModel)]="operator">
      <option value="+">+</option>
      <option value="-">-</option>
      <option value="*">Ã—</option>
      <option value="/">Ã·</option>
    </select>
    <input type="number" [(ngModel)]="num2" placeholder="Enter second number" />
  </div>

  <button (click)="calculate()">Calculate</button>

  <h3>Result: {{ result }}</h3>
</div>
```

---

## **Step 6: Style the Calculator in `calculator.component.css`**
Replace `calculator.component.css` with:

```css
.container {
  max-width: 400px;
  margin: auto;
  padding: 20px;
  text-align: center;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 2px 2px 12px rgba(0, 0, 0, 0.1);
}

h2 {
  margin-bottom: 10px;
}

.input-group {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  margin-bottom: 15px;
}

input, select {
  padding: 8px;
  border: 1px solid #ccc;
  border-radius: 5px;
  font-size: 16px;
}

button {
  padding: 10px 20px;
  font-size: 16px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

h3 {
  margin-top: 15px;
  color: #333;
}
```

---

## **Step 7: Display the Calculator in `app.component.html`**
Open `src/app/app.component.html` and replace its contents with:

```html
<app-calculator></app-calculator>
```

---

## **Step 8: Run the Application**
Go to VS Code terminal and start the Angular server:
```sh
ng serve
```
Now open **http://localhost:4200/** in your browser.

ðŸŽ‰ **Your Angular Calculator is Live!** ðŸŽ‰

---

## **Features Implemented**
âœ… **Two-way data binding (`ngModel`)**  
âœ… **Addition, Subtraction, Multiplication, Division**  
âœ… **Dropdown for selecting operation**  
âœ… **Real-time result calculation**  
âœ… **User-friendly interface**  
âœ… **Mobile-responsive design**  

---

### **Need Backend Integration?**
We can extend this calculator to **store calculations on a server** using `HttpClientModule`. Let me know if you need that! ðŸš€
